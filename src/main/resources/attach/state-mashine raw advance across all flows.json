{
  "info": {
    "name": "State Machine Bank Workflow â€” RAW /event flows",
    "_postman_id": "6f3ad2d1-raw-event-collection-001",
    "description": "Exercise SINGLE_OWNER, MULTI_OWNER, MINOR, and MINOR_TO_REGULAR using /event instead of /advance. Asserts state and screenCode returned by DTO.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "SINGLE_OWNER (raw /event)",
      "item": [
        {
          "name": "Start SINGLE_OWNER",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/start",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"clientId\": \"client-evt-001\",\n  \"type\": \"SINGLE_OWNER\",\n  \"initialData\": {\"accountType\": \"CHECKING\"}\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.response.to.have.status(200);",
                  "const j = pm.response.json();",
                  "pm.environment.set('processId', j.id);",
                  "pm.expect(j.type).eql('SINGLE_OWNER');",
                  "pm.expect(j.state).eql('STARTED');",
                  "pm.expect(j.screenCode).eql('s500.1');"
                ]
              }
            }
          ]
        },
        {
          "name": "START_FLOW -> KYC_IN_PROGRESS",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/{{processId}}/event",
            "body": { "mode": "raw", "raw": "{ \"event\": \"START_FLOW\", \"data\": {} }" }
          },
          "event": [
            { "listen": "test", "script": { "exec": [
              "pm.response.to.have.status(200); const j=pm.response.json();",
              "pm.expect(j.state).eql('KYC_IN_PROGRESS'); pm.expect(j.screenCode).eql('s510.1');"
            ]}}
          ]
        },
        {
          "name": "KYC_VERIFIED -> WAITING_FOR_BIOMETRY",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/{{processId}}/event",
            "body": { "mode": "raw", "raw": "{ \"event\": \"KYC_VERIFIED\", \"data\": {\"status\":\"APPROVED\",\"verificationId\":\"kyc123\",\"riskLevel\":\"LOW\"} }" }
          },
          "event": [
            { "listen": "test", "script": { "exec": [
              "pm.response.to.have.status(200); const j=pm.response.json();",
              "pm.expect(j.state).eql('WAITING_FOR_BIOMETRY'); pm.expect(j.screenCode).eql('s510.2');"
            ]}}
          ]
        },
        {
          "name": "BIOMETRY_SUCCESS -> BIOMETRY_VERIFIED",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/{{processId}}/event",
            "body": { "mode": "raw", "raw": "{ \"event\": \"BIOMETRY_SUCCESS\", \"data\": {\"biometryId\":\"bio123\",\"matchScore\":\"0.95\",\"livenessScore\":\"0.98\"} }" }
          },
          "event": [
            { "listen": "test", "script": { "exec": [
              "pm.response.to.have.status(200); const j=pm.response.json();",
              "pm.expect(j.state).eql('BIOMETRY_VERIFIED'); pm.expect(j.screenCode).eql('s510.3');"
            ]}}
          ]
        },
        {
          "name": "CREATE_ACCOUNT -> ACCOUNT_CREATED",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/{{processId}}/event",
            "body": { "mode": "raw", "raw": "{ \"event\": \"CREATE_ACCOUNT\", \"data\": {\"accountId\":\"acc123\",\"iban\":\"GB123456789\",\"currency\":\"USD\"} }" }
          },
          "event": [
            { "listen": "test", "script": { "exec": [
              "pm.response.to.have.status(200); const j=pm.response.json();",
              "pm.expect(j.state).eql('ACCOUNT_CREATED'); pm.expect(j.screenCode).eql('s510.4');"
            ]}}
          ]
        }
      ]
    },
    {
      "name": "MULTI_OWNER (raw /event)",
      "item": [
        {
          "name": "Start MULTI_OWNER",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/start",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"clientId\": \"biz-evt-001\",\n  \"type\": \"MULTI_OWNER\",\n  \"initialData\": {\"companyName\":\"ABC Corp\"}\n}"
            }
          },
          "event": [
            { "listen": "test", "script": { "exec": [
              "pm.response.to.have.status(200); const j=pm.response.json(); pm.environment.set('processId', j.id);",
              "pm.expect(j.type).eql('MULTI_OWNER'); pm.expect(j.state).eql('STARTED'); pm.expect(j.screenCode).eql('s500.1');"
            ]}}
          ]
        },
        {
          "name": "START_FLOW -> FILL_PERSONAL_DETAILS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"START_FLOW\", \"data\":{} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('FILL_PERSONAL_DETAILS'); pm.expect(j.screenCode).eql('s520.1');"
          ]}}]
        },
        {
          "name": "SUBMIT_PERSONAL -> ANSWER_ACCOUNT_QUESTIONS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"SUBMIT_PERSONAL\", \"data\":{\"registeredAddress\":\"Main St 1\"} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('ANSWER_ACCOUNT_QUESTIONS'); pm.expect(j.screenCode).eql('s520.2');"
          ]}}]
        },
        {
          "name": "SUBMIT_ANSWERS -> KYC_IN_PROGRESS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"SUBMIT_ANSWERS\", \"data\":{\"answers\":\"ok\"} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('KYC_IN_PROGRESS'); pm.expect(j.screenCode).eql('s510.1');"
          ]}}]
        },
        {
          "name": "KYC_VERIFIED -> WAITING_FOR_BIOMETRY",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"KYC_VERIFIED\", \"data\":{\"status\":\"APPROVED\",\"kycId\":\"kyc-m1\"} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('WAITING_FOR_BIOMETRY'); pm.expect(j.screenCode).eql('s510.2');"
          ]}}]
        },
        {
          "name": "BIOMETRY_SUCCESS -> BIOMETRY_VERIFIED",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"BIOMETRY_SUCCESS\", \"data\":{\"match\":true} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('BIOMETRY_VERIFIED'); pm.expect(j.screenCode).eql('s510.3');"
          ]}}]
        },
        {
          "name": "ADD_OWNER -> WAITING_FOR_ALL_OWNERS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"ADD_OWNER\", \"data\":{\"ownerId\":\"owner1\",\"firstName\":\"John\",\"share\":\"60\",\"role\":\"CEO\"} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('WAITING_FOR_ALL_OWNERS'); pm.expect(j.screenCode).eql('s520.3');"
          ]}}]
        },
        {
          "name": "CONFIRM_ALL_OWNERS -> ACCOUNT_CREATED",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{processId}}/event", "body": {"mode":"raw","raw":"{ \"event\":\"CONFIRM_ALL_OWNERS\", \"data\":{\"totalOwners\":\"2\",\"totalShare\":\"100\",\"confirmationDate\":\"2025-08-09\"} }"} },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('ACCOUNT_CREATED'); pm.expect(j.screenCode).eql('s510.4');"
          ]}}]
        }
      ]
    },
    {
      "name": "MINOR (raw /event)",
      "item": [
        {
          "name": "Start MINOR",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/start",
            "body": { "mode": "raw", "raw": "{\n  \"clientId\": \"minor-evt-001\",\n  \"type\": \"MINOR\",\n  \"initialData\": {\"age\":\"14\"}\n}" }
          },
          "event": [
            { "listen":"test", "script": { "exec":[
              "pm.response.to.have.status(200); const j=pm.response.json(); pm.environment.set('processId', j.id);",
              "pm.expect(j.type).eql('MINOR'); pm.expect(j.state).eql('STARTED'); pm.expect(j.screenCode).eql('s500.1');"
            ]}}
          ]
        },
        {
          "name": "START_FLOW -> FILL_PERSONAL_DETAILS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"START_FLOW\", \"data\": {} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('FILL_PERSONAL_DETAILS'); pm.expect(j.screenCode).eql('s520.1');"
          ]}}]
        },
        {
          "name": "SUBMIT_PERSONAL -> ANSWER_ACCOUNT_QUESTIONS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"SUBMIT_PERSONAL\", \"data\": {\"firstName\":\"John Jr\",\"lastName\":\"Doe\"} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('ANSWER_ACCOUNT_QUESTIONS'); pm.expect(j.screenCode).eql('s520.2');"
          ]}}]
        },
        {
          "name": "SUBMIT_ANSWERS -> KYC_IN_PROGRESS",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"SUBMIT_ANSWERS\", \"data\": {\"answers\":\"ok\"} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('KYC_IN_PROGRESS'); pm.expect(j.screenCode).eql('s510.1');"
          ]}}]
        },
        {
          "name": "KYC_VERIFIED -> WAITING_FOR_BIOMETRY",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"KYC_VERIFIED\", \"data\": {\"status\":\"APPROVED\",\"verificationId\":\"kyc-min-1\"} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('WAITING_FOR_BIOMETRY'); pm.expect(j.screenCode).eql('s510.2');"
          ]}}]
        },
        {
          "name": "BIOMETRY_SUCCESS -> BIOMETRY_VERIFIED",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"BIOMETRY_SUCCESS\", \"data\": {\"match\":true} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('BIOMETRY_VERIFIED'); pm.expect(j.screenCode).eql('s510.3');"
          ]}}]
        },
        {
          "name": "REQUEST_PARENT_CONSENT -> WAITING_FOR_PARENT_CONSENT",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"REQUEST_PARENT_CONSENT\", \"data\": {} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('WAITING_FOR_PARENT_CONSENT'); pm.expect(j.screenCode).eql('s530.1');"
          ]}}]
        },
        {
          "name": "PARENT_APPROVED -> ACCOUNT_CREATED_LIMITED",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"PARENT_APPROVED\", \"data\": {\"consentDocument\":\"consent123.pdf\"} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('ACCOUNT_CREATED_LIMITED'); pm.expect(j.screenCode).eql('s530.2');"
          ]}}]
        },
        {
          "name": "CREATE_ACCOUNT -> MINOR_ACCOUNT_IDENTIFIED",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json" }], "url": "{{baseUrl}}/process/{{processId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"CREATE_ACCOUNT\", \"data\": {\"accLimited\":\"acc-min-1\"} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('MINOR_ACCOUNT_IDENTIFIED'); pm.expect(j.screenCode).eql('s530.3');"
          ]}}]
        }
      ]
    },
    {
      "name": "MINOR_TO_REGULAR (raw /event)",
      "item": [
        {
          "name": "Start conversion (MINOR_TO_REGULAR)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "url": "{{baseUrl}}/process/conversion/start",
            "body": { "mode": "raw", "raw": "{\n  \"clientId\": \"client-conv-evt-1\",\n  \"minorAccountId\": \"minor-acc-123\",\n  \"initialData\": {\"reason\":\"age>=18\"}\n}" }
          },
          "event": [
            { "listen":"test", "script": { "exec":[
              "pm.response.to.have.status(200); const j=pm.response.json(); pm.environment.set('convProcessId', j.id);",
              "pm.expect(j.type).eql('MINOR_TO_REGULAR'); pm.expect(j.state).eql('MINOR_ACCOUNT_IDENTIFIED'); pm.expect(j.screenCode).eql('s530.3');"
            ]}}]
        },
        {
          "name": "CONFIRM_CONVERSION -> WAITING_FOR_CONVERSION_CONFIRMATION",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{convProcessId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"CONFIRM_CONVERSION\", \"data\": {} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('WAITING_FOR_CONVERSION_CONFIRMATION'); pm.expect(j.screenCode).eql('s540.1');"
          ]}}]
        },
        {
          "name": "COMPLETE_CONVERSION -> ACCOUNT_CONVERTED_TO_REGULAR",
          "request": { "method": "POST", "header": [{ "key": "Content-Type", "value": "application/json"}], "url": "{{baseUrl}}/process/{{convProcessId}}/event", "body": { "mode":"raw", "raw": "{ \"event\": \"COMPLETE_CONVERSION\", \"data\": {\"converted\": true} }" } },
          "event": [{ "listen":"test", "script": { "exec":[
            "pm.response.to.have.status(200); const j=pm.response.json();",
            "pm.expect(j.state).eql('ACCOUNT_CONVERTED_TO_REGULAR'); pm.expect(j.screenCode).eql('s540.2');"
          ]}}]
        }
      ]
    },
    {
      "name": "NEGATIVE (raw /event)",
      "item": [
        {
          "name": "Wrong event at STARTED (ignored/rejected)",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json"}],
            "url": "{{baseUrl}}/process/{{processId}}/event",
            "body": { "mode":"raw", "raw": "{ \"event\": \"CREATE_ACCOUNT\", \"data\": {} }" }
          },
          "event": [
            { "listen":"test", "script": { "exec":[
              "pm.test('Should be 4xx/5xx or state unchanged by service rules', ()=> pm.expect(pm.response.code).to.be.oneOf([200,400,409,500]));"
            ]}}
          ]
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://localhost:8080" },
    { "key": "processId", "value": "" },
    { "key": "convProcessId", "value": "" }
  ]
}
